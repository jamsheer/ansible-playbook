---
# a unix path-friendly name (IE, no spaces or special characters)
project_name: yougotagift

# the base path to install to. You should not need to change this.
install_root: "{{ lookup('env', 'HOME') }}"
project_directory: "{{ install_root }}/Projects"
username: "{{ lookup('env','USER') }}"
backupfile: "~/Desktop/backup.sql.gz"
# the python module path to your project's wsgi file. E.g. for a directory
# layout like this (assuming `yougotagift` is the project_name and top level
# directory name):
# yougotagift
# ├── yougotagift
# │   ├── apps
# │   ├── __init__.py
# │   ├── settings.py
# │   ├── urls.py
# │   └── wsgi.py
# ├── manage.py
# └── requirements.txt
# the correct wsgi_module value would be `yougotagift.wsgi`
wsgi_module: yougotagift.wsgi

# any directories that need to be added to the PYTHONPATH.
pythonpath: "{{ project_directory }}/{{ project_name }}"

# the git repository URL for the project
project_repo: git@github.com:YouGotaGift/yougotagift.git
    
# a private key that has access to the repository URL
ssh_private_key: ~/.ssh/id_rsa

# The value of your django project's STATIC_ROOT settings.
# This will be the directory that django's `collectstatic` management command
# copies static files to, and it must be an absolute path. The default value 
# here assumes that STATIC_ROOT is set in your settings.py like so:
# STATIC_ROOT = os.path.abspath(os.path.join(BASE_DIR, 'static'))
static_root: "{{ project_directory }}/{{ project_name }}/yougotagift/app_static"

# the dns name or names (space separated) for your server
server_name: yougotagift.com www.yougotagift.com

# database setup. Note that because this playbook doesn't touch the default 
# postgres pg_hba.conf file, we use local password-based authentication for
# postgres and thus you need to provide a username and password, and your
# settings.py MUST set "localhost" or "127.0.0.1" as the HOST value. For
# example, the default settings here assume the following values in
# settings.py:
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql_psycopg2',
#         'HOST': 'localhost',
#         'NAME': 'yougotagiftdb_dev',
#         'USER': 'hello',
#         'PASSWORD': 'changeme',
#     }
# }
db_name: yougotagiftdb_dev
db_user: yougotagift
db_password: ygtdb2016

# apt packages, you should not need to change this unless you have packages
# listed in your requirements.txt that depend on system packages.
system_packages:
  - git
  - nginx
  - gunicorn
  - mysql
  - python-pip
  - python-dev
  - python-psycopg2
  - pyenv
  - graphicsmagick
  - redis
  - node010
  - npm
  - nodejs-legacy
  - bash-completion
# vim:ft=ansible:
